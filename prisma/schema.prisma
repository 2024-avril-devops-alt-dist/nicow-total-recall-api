datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id                String    @id @default(auto()) @map("_id") @db.ObjectId
  email             String    @unique
  phoneNumber       String    @default("") @db.String
  phoneNotification Boolean   @default(false)
  role              Role      @default(USER)
  bookings          Booking[]
}

model Booking {
  id            String      @id @default(auto()) @map("_id") @db.ObjectId
  bookingStatus String
  flight        Flight      @relation(fields: [flightId], references: [id])
  passengers    Passenger[]
  createdAt     DateTime    @default(now())
  User          User?       @relation(fields: [userId], references: [id])
  userId        String?     @db.ObjectId
  flightId      String      @db.ObjectId
}

model Flight {
  id                String         @id @default(auto()) @map("_id") @db.ObjectId
  bookingOpenStatus Boolean
  flightStatus      Boolean        @default(true)
  departureAirport  Airport        @relation("DepartureAirport", fields: [departureAirportId], references: [id])
  arrivalAirport    Airport        @relation("ArrivalAirport", fields: [arrivalAirportId], references: [id])
  departureDate     DateTime
  arrivalDate       DateTime
  airlineCompany    AirlineCompany @relation(fields: [airlineCompanyId], references: [id])
  stopovers         Stopover[]
  booking           Booking[]
  airlineCompanyId  String         @db.ObjectId
  departureAirportId String        @db.ObjectId
  arrivalAirportId   String        @db.ObjectId
}

model Passenger {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  firstName String
  lastName  String
  age       Int
  Booking   Booking? @relation(fields: [bookingId], references: [id])
  bookingId String?  @db.ObjectId
}

model Stopover {
  id            String   @id @default(auto()) @map("_id") @db.ObjectId
  arrivalDate   DateTime
  departureDate DateTime
  location      Location @relation(fields: [locationId], references: [id])
  Flight        Flight?  @relation(fields: [flightId], references: [id])
  flightId      String?  @db.ObjectId
  locationId    String   @db.ObjectId
}

model Location {
  id       String     @id @default(auto()) @map("_id") @db.ObjectId
  city     String
  planet  String
  Stopover Stopover[]
  Airport Airport[]
}

model AirlineCompany {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  companyName String
  Flight      Flight[]
}

model Airport {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  airportName String
  location Location @relation(fields: [locationId], references: [id])
  locationId String @db.ObjectId
  departures  Flight[] @relation("DepartureAirport")
  arrivals    Flight[] @relation("ArrivalAirport")
}

enum Role {
  USER
  ADMIN
}
